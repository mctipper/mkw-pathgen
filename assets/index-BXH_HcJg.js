(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))s(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function c(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(t){if(t.ep)return;t.ep=!0;const r=c(t);fetch(t.href,r)}})();function b(n,e){requestAnimationFrame(()=>{const c=e.getBoundingClientRect();n.style.width=`${c.width}px`,n.style.height=`${c.height}px`,n.style.left=`${c.left+window.scrollX}px`})}function T(n,e){requestAnimationFrame(()=>{const c=e.getBoundingClientRect();n.style.width=`${c.width}px`})}async function L(){const[n,e]=await Promise.all([fetch("/mkw-pathgen//data/tracks.json"),fetch("/mkw-pathgen//data/adjacency.json")]);if(!n.ok)throw new Error("Failed to load tracks.json data");if(!e.ok)throw new Error("Failed to load adjacency.json data");const c=await n.json(),s=await e.json(),t={};for(const[r,o]of Object.entries(c))t[r]={id:r,...o,parents:[],children:[]};for(const[r,o]of Object.entries(s)){t[r].children=o;for(const i of o)t[i].parents.push(r)}return t}let f=null;async function v(n){f||(f=await L(),n.textContent=JSON.stringify(f))}function g(){if(!f)throw new Error("TrackMap not yet initialised. Call initTrackMapStore() first.");return f}function k(){const n=document.querySelector("#selected-track-store");if(!n)throw new Error("SelectedTrackStore: #selected-track-store element not found");return n}function E(n){let e=k();e.textContent=n?JSON.stringify(n):""}function M(){const e=k().textContent;if(!e)return null;try{return JSON.parse(e)}catch{return console.warn("SelectedTrackStore: Failed to parse stored track JSON"),null}}function $(){return Array.from(document.querySelectorAll(".track-icon"))}const m=(()=>{const n=document.querySelector(".generate-button");if(!n)throw new Error("Generate button not found");return n})();function S(){m.disabled=!0}function q(){m.disabled=!1}function j(n,e,c){const s=$(),t=!!e;c.innerHTML=t?e.names.en_gb:"Select a track!",c.classList.toggle("track-selected-title-text",t),E(e),t?q():S(),s.forEach(r=>{r===n&&t?(r.classList.add("iconSelected"),r.classList.remove("iconNotSelected")):(r.classList.remove("iconSelected"),r.classList.toggle("iconNotSelected",t))})}function x(n,e,c,s){c&&c!==n&&c.classList.remove("iconSelected");const t=n.classList.toggle("iconSelected"),r=t?n:null,o=t?e:null;return j(n,o,s),{newSelectedIcon:r,newSelectedTrack:o}}function C(n,e){const c=e.offsetWidth/e.naturalWidth,s=e.offsetHeight/e.naturalHeight;n.innerHTML="";const t=e.height/8,r=t/2,o=document.querySelector(".selected-track-text");let i=null;const u=g();for(const l of Object.values(u)){const a=document.createElement("img");a.className="track-icon",a.id=l.id,a.src=`/mkw-pathgen/images/track-icons/${l.icon}`,a.alt=l.names.en_gb,a.style.position="absolute",a.style.width=`${t}px`,a.style.height=`${t}px`,a.style.left=`${l.coords.X*c-r}px`,a.style.top=`${l.coords.Y*s-r}px`,a.addEventListener("click",()=>{i=x(a,l,i,o).newSelectedIcon}),n.appendChild(a)}}function h(n){const e=[...n];for(let c=0;c<3;c++)for(let s=e.length-1;s>0;s--){const t=Math.floor(Math.random()*(s+1));[e[s],e[t]]=[e[t],e[s]]}return e}function y(n,e,c,s,t=!1){const r=new Set,o=[],i=l=>{r.has(l)?t&&o[o.length-1]!==l&&o.push(l):(o.push(l),r.add(l))},u=l=>{if(o.length>=s)return;const a=n[l];if(!a)return;i(l);const d=h(c==="forward"?a.children:a.parents);for(const w of d){if(o.length>=s)break;u(w)}};return u(e),o.slice(0,s)}function I(n,e,c){let o=y(n,e,c?"backward":"forward",4,!1);return console.debug(`First: ${o}`),c&&(o=o.reverse()),o.unshift(o[0]),console.debug(`Second: ${o}`),o.length<5?[]:o}function O(n,e,c){const s=c?"backward":"forward",t=6;let o=y(n,e,s,t,!1);return console.debug(`First: ${o}`),c&&(o=o.reverse()),console.debug(`Second: ${o}`),o.length<t?[]:o}function N(n,e,c){const s=M();if(!s){console.log("No track selected");return}const t=g();console.log("Selected track:",s.names.en_gb),console.log("Selected path mode:",n.value),console.log('Selected "end with":',e.checked),console.log("Selected include single-track:",c.checked);const r=(()=>{const o=n.value;return o==="gp"?I(t,s.id,e.checked):o==="kt"?O(t,s.id,e.checked):o.startsWith("vs")?"Not implmented":"How did you get here"})();console.log(r)}function p(n,e){const c=n.startsWith("vs");e.disabled=!c,c||(e.checked=!1)}async function P(){const n={trackMapStore:document.querySelector("#track-map-store"),selectedTrackStore:document.querySelector("#selected-track-store"),trackIconLayer:document.querySelector(".track-icons-layer"),mapImg:document.querySelector(".base-map"),pathGenControls:document.querySelector(".map-controls"),generateButton:document.querySelector(".generate-button"),pathModeSelect:document.querySelector(".path-options-dropdown"),selectedTrackEndCheck:document.querySelector(".selected-track-end"),includeSingleTrackCheck:document.querySelector(".include-single-track")},e=Object.entries(n).filter(([,d])=>d===null).map(([d])=>d);if(e.length>0){const d=e.length>1?"s":"";console.error(`Missing required DOM element${d}: ${e.join(", ")}`);return}const{trackMapStore:c,trackIconLayer:s,mapImg:t,pathGenControls:r,generateButton:o,pathModeSelect:i,selectedTrackEndCheck:u,includeSingleTrackCheck:l}=n;await v(c),S(),o.addEventListener("click",()=>N(i,u,l)),p(i.value,l),i.addEventListener("change",()=>p(i.value,l));function a(){b(s,t),T(r,t),C(s,t)}t.complete?a():t.addEventListener("load",a),window.addEventListener("resize",a)}P();
